{"version":3,"sources":["GameManagaer.js"],"names":["GAME_CONFIG","ROW","COL","MARGIN","ARR_BLOCK","cc","Class","extends","Component","properties","mainGame","Node","block","Prefab","score","Label","recored","winGame","loseGame","_isChange","onLoad","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyDown","initObj","active","_showWinLose","string","initBlock","addNum","removeAllChildren","y","height","x","width","row","col","newBlock","instantiate","setParent","setPosition","v2","label","getChildByName","getComponent","setColor","event","keyCode","checkLeftRight","checkUpDown","slideLeftOrUp","array","newArray","push","length","slideRightOrDown","updateScore","newArr","randomXY","Math","random","number","floor","hasChangeArray","arr1","arr2","checkLose","checkWin","total","clickRestart","arr","m","i","update"],"mappings":";;;;;;AACA,IAAMA,cAAc;AAChBC,SAAK,CADW;AAEhBC,SAAK,CAFW;AAGhBC,YAAQ,EAHQ,CAGL;AAHK,CAApB;;AAMA,IAAIC,YAAY,CACZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CADY,EACE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CADF,EAEZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAFY,EAEE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAFF,CAAhB;;AAKAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,kBAAUL,GAAGM,IADL;AAERC,eAAOP,GAAGQ,MAFF;AAGRC,eAAOT,GAAGU,KAHF;AAIRC,iBAASX,GAAGU,KAJJ;AAKRE,iBAASZ,GAAGM,IALJ;AAMRO,kBAAUb,GAAGM,IANL;AAORQ,mBAAW;AAPH,KAHP;;AAaLC,UAbK,oBAaI;AACLf,WAAGgB,WAAH,CAAeC,EAAf,CAAkBjB,GAAGkB,WAAH,CAAeC,SAAf,CAAyBC,QAA3C,EAAqD,KAAKC,SAA1D,EAAqE,IAArE;AACA,aAAKC,OAAL;AACH,KAhBI;AAkBLA,WAlBK,qBAkBK;AACN,aAAKT,QAAL,CAAcU,MAAd,GAAuB,KAAvB;AACA,aAAKX,OAAL,CAAaW,MAAb,GAAsB,KAAtB;AACA,aAAKC,YAAL,GAAoB,KAApB;AACA,aAAKf,KAAL,CAAWgB,MAAX,GAAoB,CAApB;AACA,aAAKC,SAAL;AACA,aAAKC,MAAL;AACA,aAAKA,MAAL;AACH,KA1BI;AA4BLD,aA5BK,uBA4BO;AACR,aAAKrB,QAAL,CAAcuB,iBAAd;AACA,YAAIC,IAAI,KAAKxB,QAAL,CAAcyB,MAAd,GAAuB,CAAvB,GAA2BnC,YAAYG,MAA/C;AAAA,YACIiC,IAAI,KAAK1B,QAAL,CAAc2B,KAAd,GAAsB,CAAC,CAAvB,GAA2BrC,YAAYG,MAD/C;AAEA,aAAI,IAAImC,MAAM,CAAd,EAAiBA,MAAMtC,YAAYC,GAAnC,EAAwCqC,KAAxC,EAA+C;AAC3C,iBAAI,IAAIC,MAAM,CAAd,EAAiBA,MAAMvC,YAAYE,GAAnC,EAAwCqC,KAAxC,EAA+C;AAC3C,qBAAKC,QAAL,GAAgBnC,GAAGoC,WAAH,CAAe,KAAK7B,KAApB,CAAhB;AACA,qBAAK4B,QAAL,CAAcE,SAAd,CAAwB,KAAKhC,QAA7B;AACA,qBAAK8B,QAAL,CAAcG,WAAd,CAA0BtC,GAAGuC,EAAH,CAAMR,CAAN,EAASF,CAAT,CAA1B;AACAE,qBAAK,KAAKI,QAAL,CAAcH,KAAd,GAAsBrC,YAAYG,MAAvC;AACA,oBAAGC,UAAUkC,GAAV,EAAeC,GAAf,KAAuB,CAA1B,EAA6B;AACzB,wBAAIM,QAAQ,KAAKL,QAAL,CAAcM,cAAd,CAA6B,OAA7B,CAAZ;AACAD,0BAAME,YAAN,CAAmB1C,GAAGU,KAAtB,EAA6Be,MAA7B,GAAsC1B,UAAUkC,GAAV,EAAeC,GAAf,CAAtC;AACA,yBAAKC,QAAL,CAAcO,YAAd,CAA2B,iBAA3B,EAA8CC,QAA9C;AACH;AACJ;AACDd,iBAAK,KAAKM,QAAL,CAAcL,MAAd,GAAuBnC,YAAYG,MAAxC;AACAiC,gBAAI,KAAK1B,QAAL,CAAc2B,KAAd,GAAsB,CAAC,CAAvB,GAA2BrC,YAAYG,MAA3C;AACH;AACJ,KA/CI;AAiDLuB,aAjDK,qBAiDKuB,KAjDL,EAiDY;AACb,aAAK9B,SAAL,GAAiB,KAAjB;AACA,gBAAO8B,MAAMC,OAAb;AACI,iBAAK,EAAL;AACA,iBAAK,EAAL;AACI,qBAAKC,cAAL,CAAoBF,MAAMC,OAA1B;AACA;AACJ,iBAAK,EAAL;AACA,iBAAK,EAAL;AACI,qBAAKE,WAAL,CAAiBH,MAAMC,OAAvB;AAPR;AASH,KA5DI;AA8DLG,iBA9DK,yBA8DSC,KA9DT,EA8DgB;AACjB,YAAIC,WAAW,EAAf;AACA,aAAI,IAAIjB,MAAM,CAAd,EAAiBA,MAAMtC,YAAYC,GAAnC,EAAwCqC,KAAxC,EAA+C;AAC3C,gBAAGgB,MAAMhB,GAAN,KAAc,CAAjB,EAAoBiB,SAASC,IAAT,CAAcF,MAAMhB,GAAN,CAAd;AACvB;AACD,aAAI,IAAIC,MAAMgB,SAASE,MAAvB,EAA+BlB,MAAMvC,YAAYE,GAAjD,EAAsDqC,KAAtD,EAA4D;AACxDgB,qBAASC,IAAT,CAAc,CAAd;AACH;AACD,eAAOD,QAAP;AACH,KAvEI;AAyELG,oBAzEK,4BAyEYJ,KAzEZ,EAyEmB;AACpB,YAAIC,WAAW,EAAf;AACA,aAAI,IAAIjB,MAAM,CAAd,EAAiBA,MAAMtC,YAAYC,GAAnC,EAAwCqC,KAAxC,EAA+C;AAC3C,gBAAGgB,MAAMhB,GAAN,KAAc,CAAjB,EAAoBiB,SAASC,IAAT,CAAcF,MAAMhB,GAAN,CAAd;AACvB;AACD,aAAI,IAAIA,OAAM,CAAd,EAAiBA,OAAMtC,YAAYC,GAAnC,EAAwCqC,MAAxC,EAA+C;AAC3C,gBAAGgB,MAAMhB,IAAN,KAAc,CAAjB,EAAoBiB,SAASC,IAAT,CAAcF,MAAMhB,IAAN,CAAd;AACvB;AACD,eAAOiB,QAAP;AACH,KAlFI;AAoFLvB,UApFK,oBAoFI;AACL,aAAK2B,WAAL;AACA,YAAIC,SAAS,EAAb;AACA,aAAI,IAAItB,MAAM,CAAd,EAAiBA,MAAMtC,YAAYC,GAAnC,EAAwCqC,KAAxC,EAA+C;AAC3C,iBAAI,IAAIC,MAAM,CAAd,EAAiBA,MAAMvC,YAAYE,GAAnC,EAAwCqC,KAAxC,EAA+C;AAC3C,oBAAGnC,UAAUkC,GAAV,EAAeC,GAAf,KAAuB,CAA1B,EAA6B;AACzBqB,2BAAOJ,IAAP,CAAY,EAACpB,GAAGE,GAAJ,EAASJ,GAAGK,GAAZ,EAAZ;AACH;AACJ;AACJ;AACD,YAAGqB,OAAOH,MAAP,GAAgB,CAAnB,EAAsB;AAClB,gBAAII,WAAWD,OAAOE,KAAKC,MAAL,KAAgBH,OAAOH,MAAvB,IAAiC,CAAxC,CAAf;AACA,gBAAIO,SAASF,KAAKG,KAAL,CAAWH,KAAKC,MAAL,KAAgB,CAA3B,CAAb;AACAC,qBAAS,CAAT,GAAa5D,UAAUyD,SAASzB,CAAnB,EAAsByB,SAAS3B,CAA/B,IAAoC,CAAjD,GAAqD9B,UAAUyD,SAASzB,CAAnB,EAAsByB,SAAS3B,CAA/B,IAAoC,CAAzF;AACH;AACD,aAAKH,SAAL;AACH,KApGI;AAsGLmC,kBAtGK,0BAsGUC,IAtGV,EAsGgBC,IAtGhB,EAsGsB;AACvB,aAAI,IAAI9B,MAAM,CAAd,EAAiBA,MAAMtC,YAAYC,GAAnC,EAAwCqC,KAAxC,EAA+C;AAC3C,gBAAG6B,KAAK7B,GAAL,KAAa8B,KAAK9B,GAAL,CAAhB,EAA2B;AACvB,qBAAKnB,SAAL,GAAiB,IAAjB;AACH;AACJ;AACJ,KA5GI;AA8GLkD,aA9GK,uBA8GO,CAEX,CAhHI;AAkHLC,YAlHK,sBAkHM;AACP,aAAI,IAAIhC,MAAM,CAAd,EAAiBA,MAAMtC,YAAYC,GAAnC,EAAwCqC,KAAxC,EAA+C;AAC3C,iBAAI,IAAIC,MAAK,CAAb,EAAgBA,MAAMvC,YAAYE,GAAlC,EAAuCqC,KAAvC,EAA8C;AAC1C,oBAAGnC,UAAUkC,GAAV,EAAeC,GAAf,MAAwB,IAA3B,EAAiC;AAC7B,yBAAKtB,OAAL,CAAaW,MAAb,GAAsB,IAAtB;AACA;AACH;AACJ;AACJ;AACJ,KA3HI;AA6HL+B,eA7HK,yBA6HS;AACV,YAAIY,QAAQ,CAAZ;AACA,aAAI,IAAIjC,MAAM,CAAd,EAAiBA,MAAMtC,YAAYC,GAAnC,EAAwCqC,KAAxC,EAA+C;AAC3C,iBAAI,IAAIC,MAAM,CAAd,EAAiBA,MAAMvC,YAAYE,GAAnC,EAAwCqC,KAAxC,EAA+C;AAC3C,oBAAGnC,UAAUkC,GAAV,EAAeC,GAAf,IAAsB,CAAzB,EAA4B;AACxBgC,6BAASnE,UAAUkC,GAAV,EAAeC,GAAf,CAAT;AACA,yBAAKzB,KAAL,CAAWgB,MAAX,GAAoByC,KAApB;AACH;AACJ;AACJ;AACJ,KAvII;AAyILC,gBAzIK,0BAyIU;AACXpE,oBAAY,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CAAD,EAAY,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CAAZ,EACC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CADD,EACY,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CADZ,CAAZ;AAEA,aAAKuB,OAAL;AACH,KA7II;AA+ILwB,kBA/IK,0BA+IUD,OA/IV,EA+ImB;AACpB,aAAI,IAAIZ,MAAM,CAAd,EAAiBA,MAAMtC,YAAYC,GAAnC,EAAwCqC,KAAxC,EAA+C;AAC3C,gBAAImC,MAAMrE,UAAUkC,GAAV,CAAV;AACA,gBAAGY,YAAY,EAAf,EAAmB;AACf9C,0BAAUkC,GAAV,IAAiB,KAAKe,aAAL,CAAmBjD,UAAUkC,GAAV,CAAnB,CAAjB;AACA,qBAAI,IAAIC,MAAM,CAAd,EAAiBA,MAAMvC,YAAYE,GAAZ,GAAkB,CAAzC,EAA4CqC,KAA5C,EAAmD;AAC/C,wBAAGnC,UAAUkC,GAAV,EAAeC,GAAf,KAAuBnC,UAAUkC,GAAV,EAAeC,MAAM,CAArB,CAA1B,EAAmD;AAC/CnC,kCAAUkC,GAAV,EAAeC,GAAf,KAAuBnC,UAAUkC,GAAV,EAAeC,MAAM,CAArB,CAAvB;AACAnC,kCAAUkC,GAAV,EAAeC,MAAM,CAArB,IAA0B,CAA1B;AACH;AACJ;AACDnC,0BAAUkC,GAAV,IAAiB,KAAKe,aAAL,CAAmBjD,UAAUkC,GAAV,CAAnB,CAAjB;AACH;AACD,gBAAGY,YAAY,EAAf,EAAmB;AACf9C,0BAAUkC,GAAV,IAAiB,KAAKoB,gBAAL,CAAsBtD,UAAUkC,GAAV,CAAtB,CAAjB;AACA,qBAAI,IAAIC,OAAM,CAAd,EAAiBA,OAAM,CAAvB,EAA0BA,MAA1B,EAAiC;AAC7B,wBAAGnC,UAAUkC,GAAV,EAAeC,IAAf,KAAuBnC,UAAUkC,GAAV,EAAeC,OAAM,CAArB,CAA1B,EAAmD;AAC/CnC,kCAAUkC,GAAV,EAAeC,IAAf,KAAuBnC,UAAUkC,GAAV,EAAeC,OAAM,CAArB,CAAvB;AACAnC,kCAAUkC,GAAV,EAAeC,OAAM,CAArB,IAA0B,CAA1B;AACH;AACJ;AACDnC,0BAAUkC,GAAV,IAAiB,KAAKoB,gBAAL,CAAsBtD,UAAUkC,GAAV,CAAtB,CAAjB;AACH;AACD,iBAAK4B,cAAL,CAAoBO,GAApB,EAAyBrE,UAAUkC,GAAV,CAAzB;AACH;AACD,YAAG,KAAKnB,SAAR,EAAmB;AACf,iBAAKa,MAAL;AACH;AACJ,KA3KI;AA6KLoB,eA7KK,uBA6KOF,OA7KP,EA6KgB;AACjB,aAAI,IAAIZ,MAAM,CAAd,EAAiBA,MAAMtC,YAAYC,GAAnC,EAAwCqC,KAAxC,EAA+C;AAC3C,gBAAIsB,SAAS,EAAb;AACA,iBAAI,IAAIrB,MAAM,CAAd,EAAiBA,MAAMvC,YAAYE,GAAnC,EAAwCqC,KAAxC,EAA+C;AAC3CqB,uBAAOJ,IAAP,CAAYpD,UAAUmC,GAAV,EAAeD,GAAf,CAAZ;AACH;AACD,gBAAImC,MAAOb,MAAX;AACA,gBAAGV,YAAY,EAAf,EAAmB;AACfU,yBAAS,KAAKP,aAAL,CAAmBO,MAAnB,CAAT;AACA,qBAAI,IAAIc,IAAI,CAAZ,EAAeA,IAAI,CAAnB,EAAsBA,GAAtB,EAA2B;AACvB,wBAAGd,OAAOc,CAAP,KAAad,OAAOc,IAAI,CAAX,CAAhB,EAA+B;AAC3Bd,+BAAOc,CAAP,KAAad,OAAOc,IAAI,CAAX,CAAb;AACAd,+BAAOc,IAAI,CAAX,IAAgB,CAAhB;AACH;AACJ;AACDd,yBAAS,KAAKP,aAAL,CAAmBO,MAAnB,CAAT;AACH;AACD,gBAAGV,YAAY,EAAf,EAAmB;AACfU,yBAAS,KAAKF,gBAAL,CAAsBE,MAAtB,CAAT;AACA,qBAAI,IAAIc,KAAI,CAAZ,EAAeA,KAAI,CAAnB,EAAsBA,IAAtB,EAA2B;AACvB,wBAAGd,OAAOc,EAAP,KAAad,OAAOc,KAAI,CAAX,CAAhB,EAA+B;AAC3Bd,+BAAOc,EAAP,KAAad,OAAOc,KAAI,CAAX,CAAb;AACAd,+BAAOc,KAAI,CAAX,IAAgB,CAAhB;AACH;AACJ;AACDd,yBAAS,KAAKF,gBAAL,CAAsBE,MAAtB,CAAT;AACH;AACD,iBAAI,IAAIe,IAAI,CAAZ,EAAeA,IAAI,CAAnB,EAAsBA,GAAtB,EAA2B;AACvBvE,0BAAUuE,CAAV,EAAarC,GAAb,IAAoBsB,OAAOe,CAAP,CAApB;AACH;AACD,iBAAKT,cAAL,CAAoBO,GAApB,EAAyBb,MAAzB;AACH;AACD,YAAG,KAAKzC,SAAR,EAAmB;AACf,iBAAKa,MAAL;AACH;AACJ,KAhNI;AAkNL4C,UAlNK,oBAkNI;AACL,aAAKN,QAAL;AACA,aAAKD,SAAL;AACH;AArNI,CAAT","file":"GameManagaer.js","sourceRoot":"../../../../assets/Scripts","sourcesContent":["\nconst GAME_CONFIG = {\n    ROW: 4,\n    COL: 4,\n    MARGIN: 16 //results from: (this.mainGame.width - this.block.width * GAME_CONFIG.ROW) / 5;\n};\n\nlet ARR_BLOCK = [\n    [0, 0, 0, 0], [0, 0, 0, 0],\n    [0, 0, 0, 0], [0, 0, 0, 0],\n];\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        mainGame: cc.Node,\n        block: cc.Prefab,\n        score: cc.Label,\n        recored: cc.Label,\n        winGame: cc.Node,\n        loseGame: cc.Node,\n        _isChange: false,\n    },\n\n    onLoad() {\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        this.initObj();\n    },\n\n    initObj() {\n        this.loseGame.active = false;\n        this.winGame.active = false;\n        this._showWinLose = false;\n        this.score.string = 0; \n        this.initBlock();\n        this.addNum();\n        this.addNum();\n    },\n\n    initBlock() {\n        this.mainGame.removeAllChildren();\n        let y = this.mainGame.height / 2 - GAME_CONFIG.MARGIN,\n            x = this.mainGame.width / -2 + GAME_CONFIG.MARGIN;\n        for(let row = 0; row < GAME_CONFIG.ROW; row++) {\n            for(let col = 0; col < GAME_CONFIG.COL; col++) {\n                this.newBlock = cc.instantiate(this.block); \n                this.newBlock.setParent(this.mainGame);\n                this.newBlock.setPosition(cc.v2(x, y));\n                x += this.newBlock.width + GAME_CONFIG.MARGIN;\n                if(ARR_BLOCK[row][col] != 0) {\n                    let label = this.newBlock.getChildByName(\"Value\");\n                    label.getComponent(cc.Label).string = ARR_BLOCK[row][col];\n                    this.newBlock.getComponent(\"BlockController\").setColor();\n                }\n            }\n            y -= this.newBlock.height + GAME_CONFIG.MARGIN;\n            x = this.mainGame.width / -2 + GAME_CONFIG.MARGIN;\n        };\n    },\n\n    onKeyDown(event) {\n        this._isChange = false;\n        switch(event.keyCode) {\n            case 37:\n            case 39:\n                this.checkLeftRight(event.keyCode);  \n                break;\n            case 38: \n            case 40:\n                this.checkUpDown(event.keyCode);\n        }\n    },\n\n    slideLeftOrUp(array) {\n        let newArray = [];\n        for(let row = 0; row < GAME_CONFIG.ROW; row++) {\n            if(array[row] != 0) newArray.push(array[row]);\n        };\n        for(let col = newArray.length; col < GAME_CONFIG.COL; col++){\n            newArray.push(0);\n        }\n        return newArray;\n    },\n\n    slideRightOrDown(array) {\n        let newArray = [];\n        for(let row = 0; row < GAME_CONFIG.ROW; row++) {\n            if(array[row] == 0) newArray.push(array[row]);\n        };\n        for(let row = 0; row < GAME_CONFIG.ROW; row++) {\n            if(array[row] != 0) newArray.push(array[row]);\n        };\n        return newArray;\n    },\n\n    addNum() {\n        this.updateScore();\n        let newArr = [];\n        for(let row = 0; row < GAME_CONFIG.ROW; row++) {\n            for(let col = 0; col < GAME_CONFIG.COL; col++) { \n                if(ARR_BLOCK[row][col] == 0) {\n                    newArr.push({x: row, y: col});\n                }\n            }\n        }\n        if(newArr.length > 0) {\n            let randomXY = newArr[Math.random() * newArr.length >> 0];\n            let number = Math.floor(Math.random() * 4);\n            number < 3 ? ARR_BLOCK[randomXY.x][randomXY.y] = 2 : ARR_BLOCK[randomXY.x][randomXY.y] = 4;   \n        }\n        this.initBlock();\n    },\n\n    hasChangeArray(arr1, arr2) {\n        for(let row = 0; row < GAME_CONFIG.ROW; row++) {\n            if(arr1[row] != arr2[row]) {\n                this._isChange = true;\n            }\n        }\n    },\n\n    checkLose() {\n        \n    }, \n\n    checkWin() {\n        for(let row = 0; row < GAME_CONFIG.ROW; row++) {\n            for(let col =0; col < GAME_CONFIG.COL; col++) {\n                if(ARR_BLOCK[row][col] === 2048) {\n                    this.winGame.active = true;\n                    return;\n                }\n            }\n        }\n    },\n\n    updateScore() {\n        let total = 0;\n        for(let row = 0; row < GAME_CONFIG.ROW; row++) {\n            for(let col = 0; col < GAME_CONFIG.COL; col++) {\n                if(ARR_BLOCK[row][col] > 2) {\n                    total += ARR_BLOCK[row][col];\n                    this.score.string = total;\n                }\n            }\n        }\n    },\n\n    clickRestart() {\n        ARR_BLOCK = [[0,0,0,0], [0,0,0,0],\n                     [0,0,0,0], [0,0,0,0]];\n        this.initObj();\n    },\n\n    checkLeftRight(keyCode) {\n        for(let row = 0; row < GAME_CONFIG.ROW; row++) {\n            let arr = ARR_BLOCK[row];\n            if(keyCode === 37) {\n                ARR_BLOCK[row] = this.slideLeftOrUp(ARR_BLOCK[row]);\n                for(let col = 0; col < GAME_CONFIG.COL - 1; col++) {\n                    if(ARR_BLOCK[row][col] == ARR_BLOCK[row][col + 1]) {\n                        ARR_BLOCK[row][col] += ARR_BLOCK[row][col + 1];\n                        ARR_BLOCK[row][col + 1] = 0;\n                    }\n                }\n                ARR_BLOCK[row] = this.slideLeftOrUp(ARR_BLOCK[row]);\n            }\n            if(keyCode === 39) {\n                ARR_BLOCK[row] = this.slideRightOrDown(ARR_BLOCK[row]);\n                for(let col = 3; col > 0; col--) {\n                    if(ARR_BLOCK[row][col] == ARR_BLOCK[row][col - 1]) {\n                        ARR_BLOCK[row][col] += ARR_BLOCK[row][col - 1];\n                        ARR_BLOCK[row][col - 1] = 0;\n                    }\n                }\n                ARR_BLOCK[row] = this.slideRightOrDown(ARR_BLOCK[row]);\n            }\n            this.hasChangeArray(arr, ARR_BLOCK[row]);\n        }\n        if(this._isChange) {\n            this.addNum();\n        }\n    },\n    \n    checkUpDown(keyCode) {\n        for(let row = 0; row < GAME_CONFIG.ROW; row++) {\n            let newArr = [];\n            for(let col = 0; col < GAME_CONFIG.COL; col++) {\n                newArr.push(ARR_BLOCK[col][row]);    \n            }\n            let arr  = newArr;\n            if(keyCode === 38) {\n                newArr = this.slideLeftOrUp(newArr);\n                for(let m = 0; m < 3; m++) {\n                    if(newArr[m] == newArr[m + 1]) {\n                        newArr[m] += newArr[m + 1];\n                        newArr[m + 1] = 0;\n                    }\n                }\n                newArr = this.slideLeftOrUp(newArr);\n            }\n            if(keyCode === 40) {\n                newArr = this.slideRightOrDown(newArr);\n                for(let m = 3; m > 0; m--) {\n                    if(newArr[m] == newArr[m - 1]) {\n                        newArr[m] += newArr[m - 1];\n                        newArr[m - 1] = 0;\n                    }\n                }\n                newArr = this.slideRightOrDown(newArr);\n            }\n            for(let i = 0; i < 4; i++) {\n                ARR_BLOCK[i][row] = newArr[i];\n            }\n            this.hasChangeArray(arr, newArr);\n        }\n        if(this._isChange) {\n            this.addNum();\n        }\n    },\n\n    update() {\n        this.checkWin();\n        this.checkLose();\n    },\n});\n"]}