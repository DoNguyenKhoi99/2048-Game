{"version":3,"sources":["../../../../assets/Scripts/assets/Scripts/BlockController.js"],"names":["colors","require","cc","Class","extends","Component","properties","Value","default","type","Label","setColor","number","parseInt","string","node","color"],"mappings":";;;;;;AAAA,IAAIA,SAASC,QAAQ,QAAR,CAAb;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,eAAO;AACHC,qBAAU,IADP;AAEHC,kBAAOP,GAAGQ;AAFP;AADC,KAHP;;AAWLC,YAXK,sBAWK;AACN,YAAIC,SAASC,SAAS,KAAKN,KAAL,CAAWO,MAApB,CAAb;AACA,YAAGF,UAAUZ,MAAb,EAAoB;AAChB,iBAAKe,IAAL,CAAUC,KAAV,GAAkBhB,OAAOY,MAAP,CAAlB;AACH;AACJ;AAhBI,CAAT","file":"BlockController.js","sourceRoot":"../../../../assets/Scripts","sourcesContent":["let colors = require(\"Colors\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        Value :{\n            default : null,\n            type : cc.Label,\n        },\n    },\n\n\n    setColor(){\n        let number = parseInt(this.Value.string);\n        if(number in colors){\n            this.node.color = colors[number];\n        }\n    }\n});\n"]}